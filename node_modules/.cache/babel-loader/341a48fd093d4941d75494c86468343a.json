{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Mega\\\\IT\\\\Github\\\\quote-quiz-game\\\\src\\\\pages\\\\settings\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControlLabel, FormControl, Grid, Radio, RadioGroup, Typography } from '@material-ui/core';\nimport { changeQuizQuestionsType } from '../../actions';\nimport '../../styles/Settings.css';\nimport Header from '../../components/header';\n\nconst Settings = () => {\n  _s();\n\n  const quizType = useSelector(store => store.quizType);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h1\",\n        children: \"SETTINGS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        children: \"Which quiz type would you like to take:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"position\",\n          name: \"position\",\n          defaultValue: quizType,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"binary\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this),\n            label: \"Binary (Yes/No)\",\n            onChange: () => dispatch(changeQuizQuestionsType('binary'))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"multipleChoice\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this),\n            label: \"Multiple choice (choose between 3 possible answers)\",\n            onChange: () => dispatch(changeQuizQuestionsType('multipleChoice'))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Settings, \"GgK+L1LKB7Xs4XZ2ehXL8leUQWs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["D:/Mega/IT/Github/quote-quiz-game/src/pages/settings/index.js"],"names":["useDispatch","useSelector","FormControlLabel","FormControl","Grid","Radio","RadioGroup","Typography","changeQuizQuestionsType","Header","Settings","quizType","store","dispatch"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SACCC,gBADD,EAECC,WAFD,EAGCC,IAHD,EAICC,KAJD,EAKCC,UALD,EAMCC,UAND,QAOO,mBAPP;AASA,SAASC,uBAAT,QAAwC,eAAxC;AAEA,OAAO,2BAAP;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AAEA,QAAME,QAAQ,GAAGb,WAAW,EAA5B;AAEA,sBACC,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,2BACC,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAKC,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAQC,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAkC,QAAA,KAAK,EAAC,WAAxC;AAAA,+BACC,QAAC,UAAD;AACC,UAAA,GAAG,MADJ;AAEC,wBAAW,UAFZ;AAGC,UAAA,IAAI,EAAC,UAHN;AAIC,UAAA,YAAY,EAAEW,QAJf;AAAA,kCAMC,QAAC,gBAAD;AACC,YAAA,KAAK,EAAC,QADP;AAEC,YAAA,OAAO,eAAE,QAAC,KAAD;AAAO,cAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFV;AAGC,YAAA,KAAK,EAAC,iBAHP;AAIC,YAAA,QAAQ,EAAE,MAAME,QAAQ,CAACL,uBAAuB,CAAC,QAAD,CAAxB;AAJzB;AAAA;AAAA;AAAA;AAAA,kBAND,eAYC,QAAC,gBAAD;AACC,YAAA,KAAK,EAAC,gBADP;AAEC,YAAA,OAAO,eAAE,QAAC,KAAD;AAAO,cAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFV;AAGC,YAAA,KAAK,EAAC,qDAHP;AAIC,YAAA,QAAQ,EAAE,MACTK,QAAQ,CAACL,uBAAuB,CAAC,gBAAD,CAAxB;AALV;AAAA;AAAA;AAAA;AAAA,kBAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAoCA,CAzCD;;GAAME,Q;UACYT,W,EAEAD,W;;;KAHZU,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tGrid,\r\n\tRadio,\r\n\tRadioGroup,\r\n\tTypography,\r\n} from '@material-ui/core';\r\n\r\nimport { changeQuizQuestionsType } from '../../actions';\r\n\r\nimport '../../styles/Settings.css';\r\n\r\nimport Header from '../../components/header';\r\n\r\nconst Settings = () => {\r\n\tconst quizType = useSelector((store) => store.quizType);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<Grid className=\"App\">\r\n\t\t\t<Grid className=\"App-header\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Typography gutterBottom variant=\"h1\">\r\n\t\t\t\t\tSETTINGS\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography gutterBottom variant=\"h6\">\r\n\t\t\t\t\tWhich quiz type would you like to take:\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<FormControl component=\"fieldset\" color=\"secondary\">\r\n\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\trow\r\n\t\t\t\t\t\taria-label=\"position\"\r\n\t\t\t\t\t\tname=\"position\"\r\n\t\t\t\t\t\tdefaultValue={quizType}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tvalue=\"binary\"\r\n\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\tlabel=\"Binary (Yes/No)\"\r\n\t\t\t\t\t\t\tonChange={() => dispatch(changeQuizQuestionsType('binary'))}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tvalue=\"multipleChoice\"\r\n\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\tlabel=\"Multiple choice (choose between 3 possible answers)\"\r\n\t\t\t\t\t\t\tonChange={() =>\r\n\t\t\t\t\t\t\t\tdispatch(changeQuizQuestionsType('multipleChoice'))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}