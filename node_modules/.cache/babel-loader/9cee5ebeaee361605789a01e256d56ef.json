{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Mega\\\\IT\\\\Github\\\\quote-quiz-game\\\\src\\\\pages\\\\questions\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, FormControlLabel, FormControl, Grid, Radio, RadioGroup, Typography } from '@material-ui/core';\nimport { countCorrectAnswers, getQuestionsBinary, getQuestionsMultipleChoice } from '../../actions';\nimport '../../styles/Questions.css';\nimport Header from '../../components/header';\n\nconst Questions = () => {\n  _s();\n\n  const questionsData = useSelector(store => store);\n  const {\n    binaryQuestions,\n    correctAnswers,\n    multipleChoiceQuestions,\n    quizType\n  } = questionsData;\n  const dispatch = useDispatch();\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState('');\n  const [isRadioButtonDisabled, setIsRadioButtonDisabled] = useState(false);\n  useEffect(() => {\n    quizType === 'binary' ? dispatch(getQuestionsBinary()) : dispatch(getQuestionsMultipleChoice());\n    dispatch(countCorrectAnswers(0));\n  }, []); // debugger;\n\n  useEffect(() => {\n    if (questionNumber > 10 || quizType === 'binary' && !binaryQuestions || quizType === 'multipleChoice' && !multipleChoiceQuestions) {\n      return;\n    }\n\n    if (!currentQuestion || !currentQuestion.id || currentQuestion.id !== questionNumber) {\n      const question = quizType === 'binary' ? binaryQuestions.find(x => x.id === questionNumber) : multipleChoiceQuestions.find(x => x.id === questionNumber);\n      setCurrentQuestion(question);\n    }\n  }, [questionNumber, binaryQuestions, multipleChoiceQuestions]);\n\n  const checkAnswer = clickedRadioButton => {\n    if (clickedRadioButton === 'yes' && currentQuestion.answer === currentQuestion.movie || clickedRadioButton === 'no' && currentQuestion.answer !== currentQuestion.movie || clickedRadioButton === 'first option' && currentQuestion.answer === currentQuestion.options[0] || clickedRadioButton === 'second option' && currentQuestion.answer === currentQuestion.options[1] || clickedRadioButton === 'third option' && currentQuestion.answer === currentQuestion.options[2]) {\n      setIsCorrectAnswer(`Correct! The right answer is \"${currentQuestion.movie}\", ${currentQuestion.year}`);\n      currentQuestion.selectedAnswer = clickedRadioButton;\n      setCurrentQuestion(currentQuestion);\n      dispatch(countCorrectAnswers(correctAnswers + 1));\n    }\n\n    if (clickedRadioButton === 'yes' && currentQuestion.answer !== currentQuestion.movie || clickedRadioButton === 'no' && currentQuestion.answer === currentQuestion.movie || clickedRadioButton === 'first option' && currentQuestion.answer !== currentQuestion.options[0] || clickedRadioButton === 'second option' && currentQuestion.answer !== currentQuestion.options[1] || clickedRadioButton === 'third option' && currentQuestion.answer !== currentQuestion.options[2]) {\n      setIsCorrectAnswer(`Sorry, you are wrong! The right answer is \"${currentQuestion.movie}\", ${currentQuestion.year}`);\n      currentQuestion.selectedAnswer = clickedRadioButton;\n      setCurrentQuestion(currentQuestion);\n    }\n\n    setIsRadioButtonDisabled(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), quizType === 'binary' ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h3\",\n          children: [\"QUESTION \", currentQuestion.id, \" of 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          children: [\"Is the following quote \\\"\", currentQuestion.quote, \"\\\" from the movie \\\"\", currentQuestion.movie, \"\\\", \", currentQuestion.year, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            \"aria-label\": \"position\",\n            name: \"position\",\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"yes\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this),\n              label: \"Yes\",\n              onChange: () => checkAnswer('yes'),\n              disabled: isRadioButtonDisabled,\n              checked: currentQuestion.selectedAnswer === 'yes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this),\n              label: \"No\",\n              onChange: () => checkAnswer('no'),\n              disabled: isRadioButtonDisabled,\n              checked: currentQuestion.selectedAnswer === 'no'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"Answer-text\",\n          children: isCorrectAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h1\",\n          children: [\"QUESTION \", currentQuestion.id, \" of 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: [\"From which movie is the following quote \\\"\", currentQuestion.quote, \"\\\"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            \"aria-label\": \"position\",\n            name: \"position\",\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"first option\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this),\n              label: currentQuestion.options && currentQuestion.options[0],\n              onChange: () => checkAnswer('first option'),\n              disabled: isRadioButtonDisabled,\n              checked: currentQuestion.selectedAnswer === 'first option'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"second option\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this),\n              label: currentQuestion.options && currentQuestion.options[1],\n              onChange: () => checkAnswer('second option'),\n              disabled: isRadioButtonDisabled,\n              checked: currentQuestion.selectedAnswer === 'second option'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"third option\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this),\n              label: currentQuestion.options && currentQuestion.options[2],\n              onChange: () => checkAnswer('third option'),\n              disabled: isRadioButtonDisabled,\n              checked: currentQuestion.selectedAnswer === 'third option'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"Answer-text\",\n          children: isCorrectAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"Link-styles\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          variant: \"contained\",\n          onClick: () => {\n            setQuestionNumber(questionNumber + 1);\n            setIsRadioButtonDisabled(false);\n            setIsCorrectAnswer('');\n          },\n          disabled: !currentQuestion.selectedAnswer | questionNumber === 10,\n          children: \"NEXT QUESTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this), questionNumber === 10 && isRadioButtonDisabled ? /*#__PURE__*/_jsxDEV(Link, {\n        to: '/statistics',\n        className: \"Link-styles\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          color: \"secondary\",\n          variant: \"contained\",\n          className: \"Result-button-styles\" // disabled={questionNumber < 10 || !isRadioButtonDisabled}\n          ,\n          children: \"See results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 6\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Questions, \"a/SFIb5bdNCQlzWXuQ/Cgjz/RO0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["D:/Mega/IT/Github/quote-quiz-game/src/pages/questions/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","Button","FormControlLabel","FormControl","Grid","Radio","RadioGroup","Typography","countCorrectAnswers","getQuestionsBinary","getQuestionsMultipleChoice","Header","Questions","questionsData","store","binaryQuestions","correctAnswers","multipleChoiceQuestions","quizType","dispatch","currentQuestion","setCurrentQuestion","questionNumber","setQuestionNumber","isCorrectAnswer","setIsCorrectAnswer","isRadioButtonDisabled","setIsRadioButtonDisabled","id","question","find","x","checkAnswer","clickedRadioButton","answer","movie","options","year","selectedAnswer","quote"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n\tButton,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tGrid,\r\n\tRadio,\r\n\tRadioGroup,\r\n\tTypography,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n\tcountCorrectAnswers,\r\n\tgetQuestionsBinary,\r\n\tgetQuestionsMultipleChoice,\r\n} from '../../actions';\r\nimport '../../styles/Questions.css';\r\n\r\nimport Header from '../../components/header';\r\n\r\nconst Questions = () => {\r\n\tconst questionsData = useSelector((store) => store);\r\n\tconst {\r\n\t\tbinaryQuestions,\r\n\t\tcorrectAnswers,\r\n\t\tmultipleChoiceQuestions,\r\n\t\tquizType,\r\n\t} = questionsData;\r\n\tconst dispatch = useDispatch();\r\n\tconst [currentQuestion, setCurrentQuestion] = useState({});\r\n\r\n\tconst [questionNumber, setQuestionNumber] = useState(1);\r\n\r\n\tconst [isCorrectAnswer, setIsCorrectAnswer] = useState('');\r\n\r\n\tconst [isRadioButtonDisabled, setIsRadioButtonDisabled] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tquizType === 'binary'\r\n\t\t\t? dispatch(getQuestionsBinary())\r\n\t\t\t: dispatch(getQuestionsMultipleChoice());\r\n\r\n\t\tdispatch(countCorrectAnswers(0));\r\n\t}, []);\r\n\t// debugger;\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tquestionNumber > 10 ||\r\n\t\t\t(quizType === 'binary' && !binaryQuestions) ||\r\n\t\t\t(quizType === 'multipleChoice' && !multipleChoiceQuestions)\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!currentQuestion ||\r\n\t\t\t!currentQuestion.id ||\r\n\t\t\tcurrentQuestion.id !== questionNumber\r\n\t\t) {\r\n\t\t\tconst question =\r\n\t\t\t\tquizType === 'binary'\r\n\t\t\t\t\t? binaryQuestions.find((x) => x.id === questionNumber)\r\n\t\t\t\t\t: multipleChoiceQuestions.find((x) => x.id === questionNumber);\r\n\r\n\t\t\tsetCurrentQuestion(question);\r\n\t\t}\r\n\t}, [questionNumber, binaryQuestions, multipleChoiceQuestions]);\r\n\r\n\tconst checkAnswer = (clickedRadioButton) => {\r\n\t\tif (\r\n\t\t\t(clickedRadioButton === 'yes' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.movie) ||\r\n\t\t\t(clickedRadioButton === 'no' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.movie) ||\r\n\t\t\t(clickedRadioButton === 'first option' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.options[0]) ||\r\n\t\t\t(clickedRadioButton === 'second option' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.options[1]) ||\r\n\t\t\t(clickedRadioButton === 'third option' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.options[2])\r\n\t\t) {\r\n\t\t\tsetIsCorrectAnswer(\r\n\t\t\t\t`Correct! The right answer is \"${currentQuestion.movie}\", ${currentQuestion.year}`\r\n\t\t\t);\r\n\r\n\t\t\tcurrentQuestion.selectedAnswer = clickedRadioButton;\r\n\t\t\tsetCurrentQuestion(currentQuestion);\r\n\t\t\tdispatch(countCorrectAnswers(correctAnswers + 1));\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(clickedRadioButton === 'yes' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.movie) ||\r\n\t\t\t(clickedRadioButton === 'no' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.movie) ||\r\n\t\t\t(clickedRadioButton === 'first option' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.options[0]) ||\r\n\t\t\t(clickedRadioButton === 'second option' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.options[1]) ||\r\n\t\t\t(clickedRadioButton === 'third option' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.options[2])\r\n\t\t) {\r\n\t\t\tsetIsCorrectAnswer(\r\n\t\t\t\t`Sorry, you are wrong! The right answer is \"${currentQuestion.movie}\", ${currentQuestion.year}`\r\n\t\t\t);\r\n\r\n\t\t\tcurrentQuestion.selectedAnswer = clickedRadioButton;\r\n\t\t\tsetCurrentQuestion(currentQuestion);\r\n\t\t}\r\n\r\n\t\tsetIsRadioButtonDisabled(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid className=\"App\">\r\n\t\t\t<Grid className=\"App-header\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t{quizType === 'binary' ? (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h3\">\r\n\t\t\t\t\t\t\tQUESTION {currentQuestion.id} of 10\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\">\r\n\t\t\t\t\t\t\tIs the following quote \"{currentQuestion.quote}\" from the movie \"\r\n\t\t\t\t\t\t\t{currentQuestion.movie}\", {currentQuestion.year}?\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<FormControl component=\"fieldset\" color=\"secondary\">\r\n\t\t\t\t\t\t\t<RadioGroup row aria-label=\"position\" name=\"position\">\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"yes\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Yes\"\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('yes')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'yes'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"false\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel=\"No\"\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('no')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'no'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<Typography className=\"Answer-text\">{isCorrectAnswer}</Typography>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h1\">\r\n\t\t\t\t\t\t\tQUESTION {currentQuestion.id} of 10\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\">\r\n\t\t\t\t\t\t\tFrom which movie is the following quote \"{currentQuestion.quote}\"?\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<FormControl component=\"fieldset\" color=\"secondary\">\r\n\t\t\t\t\t\t\t<RadioGroup row aria-label=\"position\" name=\"position\">\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"first option\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel={currentQuestion.options && currentQuestion.options[0]}\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('first option')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'first option'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"second option\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel={currentQuestion.options && currentQuestion.options[1]}\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('second option')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'second option'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"third option\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel={currentQuestion.options && currentQuestion.options[2]}\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('third option')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'third option'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<Typography className=\"Answer-text\">{isCorrectAnswer}</Typography>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t\t<Link className=\"Link-styles\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetQuestionNumber(questionNumber + 1);\r\n\t\t\t\t\t\t\tsetIsRadioButtonDisabled(false);\r\n\t\t\t\t\t\t\tsetIsCorrectAnswer('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdisabled={!currentQuestion.selectedAnswer | (questionNumber === 10)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNEXT QUESTION\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t{questionNumber === 10 && isRadioButtonDisabled ? (\r\n\t\t\t\t\t<Link to={'/statistics'} className=\"Link-styles\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tclassName=\"Result-button-styles\"\r\n\t\t\t\t\t\t\t// disabled={questionNumber < 10 || !isRadioButtonDisabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSee results\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t) : null}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Questions;\r\n"]},"metadata":{},"sourceType":"module"}