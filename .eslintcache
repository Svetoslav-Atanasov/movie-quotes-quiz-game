[{"D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\index.js":"1","D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\store.js":"2","D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\pages\\home\\index.js":"3","D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\pages\\statistics\\index.js":"4","D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\pages\\settings\\index.js":"5","D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\pages\\questions\\index.js":"6","D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\reducer.js":"7","D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\actions.js":"8","D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\components\\header\\index.js":"9"},{"size":782,"mtime":1608726797000,"results":"10","hashOfConfig":"11"},{"size":1024,"mtime":1608673350000,"results":"12","hashOfConfig":"11"},{"size":741,"mtime":1608730551000,"results":"13","hashOfConfig":"11"},{"size":858,"mtime":1608730527000,"results":"14","hashOfConfig":"11"},{"size":1483,"mtime":1608729871000,"results":"15","hashOfConfig":"11"},{"size":7177,"mtime":1608730487000,"results":"16","hashOfConfig":"11"},{"size":989,"mtime":1608721416000,"results":"17","hashOfConfig":"11"},{"size":962,"mtime":1608721319000,"results":"18","hashOfConfig":"11"},{"size":644,"mtime":1608732097407,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1f0uu04",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\index.js",[],["40","41"],"D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\store.js",[],"D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\pages\\home\\index.js",[],"D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\pages\\statistics\\index.js",[],"D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\pages\\settings\\index.js",[],"D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\pages\\questions\\index.js",["42","43"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n\tButton,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tGrid,\r\n\tRadio,\r\n\tRadioGroup,\r\n\tTypography,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n\tcountCorrectAnswers,\r\n\tgetQuestionsBinary,\r\n\tgetQuestionsMultipleChoice,\r\n} from '../../actions';\r\nimport '../../styles/Questions.css';\r\n\r\nimport Header from '../../components/header';\r\n\r\nconst Questions = () => {\r\n\tconst questionsData = useSelector((store) => store);\r\n\tconst {\r\n\t\tbinaryQuestions,\r\n\t\tcorrectAnswers,\r\n\t\tmultipleChoiceQuestions,\r\n\t\tquizType,\r\n\t} = questionsData;\r\n\tconst dispatch = useDispatch();\r\n\tconst [currentQuestion, setCurrentQuestion] = useState({});\r\n\r\n\tconst [questionNumber, setQuestionNumber] = useState(1);\r\n\r\n\tconst [isCorrectAnswer, setIsCorrectAnswer] = useState('');\r\n\r\n\tconst [isRadioButtonDisabled, setIsRadioButtonDisabled] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tquizType === 'binary'\r\n\t\t\t? dispatch(getQuestionsBinary())\r\n\t\t\t: dispatch(getQuestionsMultipleChoice());\r\n\r\n\t\tdispatch(countCorrectAnswers(0));\r\n\t}, []);\r\n\t// debugger;\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tquestionNumber > 10 ||\r\n\t\t\t(quizType === 'binary' && !binaryQuestions) ||\r\n\t\t\t(quizType === 'multipleChoice' && !multipleChoiceQuestions)\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!currentQuestion ||\r\n\t\t\t!currentQuestion.id ||\r\n\t\t\tcurrentQuestion.id !== questionNumber\r\n\t\t) {\r\n\t\t\tconst question =\r\n\t\t\t\tquizType === 'binary'\r\n\t\t\t\t\t? binaryQuestions.find((x) => x.id === questionNumber)\r\n\t\t\t\t\t: multipleChoiceQuestions.find((x) => x.id === questionNumber);\r\n\r\n\t\t\tsetCurrentQuestion(question);\r\n\t\t}\r\n\t}, [questionNumber, binaryQuestions, multipleChoiceQuestions]);\r\n\r\n\tconst checkAnswer = (clickedRadioButton) => {\r\n\t\tif (\r\n\t\t\t(clickedRadioButton === 'yes' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.movie) ||\r\n\t\t\t(clickedRadioButton === 'no' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.movie) ||\r\n\t\t\t(clickedRadioButton === 'first option' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.options[0]) ||\r\n\t\t\t(clickedRadioButton === 'second option' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.options[1]) ||\r\n\t\t\t(clickedRadioButton === 'third option' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.options[2])\r\n\t\t) {\r\n\t\t\tsetIsCorrectAnswer(\r\n\t\t\t\t`Correct! The right answer is \"${currentQuestion.movie}\", ${currentQuestion.year}`\r\n\t\t\t);\r\n\r\n\t\t\tcurrentQuestion.selectedAnswer = clickedRadioButton;\r\n\t\t\tsetCurrentQuestion(currentQuestion);\r\n\t\t\tdispatch(countCorrectAnswers(correctAnswers + 1));\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(clickedRadioButton === 'yes' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.movie) ||\r\n\t\t\t(clickedRadioButton === 'no' &&\r\n\t\t\t\tcurrentQuestion.answer === currentQuestion.movie) ||\r\n\t\t\t(clickedRadioButton === 'first option' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.options[0]) ||\r\n\t\t\t(clickedRadioButton === 'second option' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.options[1]) ||\r\n\t\t\t(clickedRadioButton === 'third option' &&\r\n\t\t\t\tcurrentQuestion.answer !== currentQuestion.options[2])\r\n\t\t) {\r\n\t\t\tsetIsCorrectAnswer(\r\n\t\t\t\t`Sorry, you are wrong! The right answer is \"${currentQuestion.movie}\", ${currentQuestion.year}`\r\n\t\t\t);\r\n\r\n\t\t\tcurrentQuestion.selectedAnswer = clickedRadioButton;\r\n\t\t\tsetCurrentQuestion(currentQuestion);\r\n\t\t}\r\n\r\n\t\tsetIsRadioButtonDisabled(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid className=\"App\">\r\n\t\t\t<Grid className=\"App-header\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t{quizType === 'binary' ? (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h3\">\r\n\t\t\t\t\t\t\tQUESTION {currentQuestion.id} of 10\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\">\r\n\t\t\t\t\t\t\tIs the following quote \"{currentQuestion.quote}\" from the movie \"\r\n\t\t\t\t\t\t\t{currentQuestion.movie}\", {currentQuestion.year}?\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<FormControl component=\"fieldset\" color=\"secondary\">\r\n\t\t\t\t\t\t\t<RadioGroup row aria-label=\"position\" name=\"position\">\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"yes\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Yes\"\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('yes')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'yes'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"false\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel=\"No\"\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('no')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'no'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<Typography className=\"Answer-text\">{isCorrectAnswer}</Typography>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h1\">\r\n\t\t\t\t\t\t\tQUESTION {currentQuestion.id} of 10\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\">\r\n\t\t\t\t\t\t\tFrom which movie is the following quote \"{currentQuestion.quote}\"?\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<FormControl component=\"fieldset\" color=\"secondary\">\r\n\t\t\t\t\t\t\t<RadioGroup row aria-label=\"position\" name=\"position\">\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"first option\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel={currentQuestion.options && currentQuestion.options[0]}\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('first option')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'first option'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"second option\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel={currentQuestion.options && currentQuestion.options[1]}\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('second option')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'second option'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue=\"third option\"\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"secondary\" />}\r\n\t\t\t\t\t\t\t\t\tlabel={currentQuestion.options && currentQuestion.options[2]}\r\n\t\t\t\t\t\t\t\t\tonChange={() => checkAnswer('third option')}\r\n\t\t\t\t\t\t\t\t\tdisabled={isRadioButtonDisabled}\r\n\t\t\t\t\t\t\t\t\tchecked={currentQuestion.selectedAnswer === 'third option'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<Typography className=\"Answer-text\">{isCorrectAnswer}</Typography>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t\t<Link className=\"Link-styles\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetQuestionNumber(questionNumber + 1);\r\n\t\t\t\t\t\t\tsetIsRadioButtonDisabled(false);\r\n\t\t\t\t\t\t\tsetIsCorrectAnswer('');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdisabled={!currentQuestion.selectedAnswer | (questionNumber === 10)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNEXT QUESTION\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t{questionNumber === 10 && isRadioButtonDisabled ? (\r\n\t\t\t\t\t<Link to={'/statistics'} className=\"Link-styles\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tclassName=\"Result-button-styles\"\r\n\t\t\t\t\t\t\t// disabled={questionNumber < 10 || !isRadioButtonDisabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSee results\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t) : null}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Questions;\r\n","D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\reducer.js",[],"D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\actions.js",[],"D:\\Mega\\IT\\Github\\quote-quiz-game\\src\\components\\header\\index.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":46,"column":5,"nodeType":"50","endLine":46,"endColumn":7,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":69,"column":5,"nodeType":"50","endLine":69,"endColumn":63,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'quizType'. Either include them or remove the dependency array.","ArrayExpression",["56"],"React Hook useEffect has missing dependencies: 'currentQuestion' and 'quizType'. Either include them or remove the dependency array.",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [dispatch, quizType]",{"range":"62","text":"63"},"Update the dependencies array to be: [questionNumber, binaryQuestions, multipleChoiceQuestions, quizType, currentQuestion]",{"range":"64","text":"65"},[1148,1150],"[dispatch, quizType]",[1697,1755],"[questionNumber, binaryQuestions, multipleChoiceQuestions, quizType, currentQuestion]"]